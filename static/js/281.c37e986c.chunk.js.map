{"version":3,"file":"static/js/281.c37e986c.chunk.js","mappings":"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","sources":["Services/movies-api.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = '597f9408c4003b5df23df8b028e83258';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}  \n\n\nexport async function fetchMovieCredits(id) {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}  \n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n} \n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n} ","import PropTypes from 'prop-types';\nimport { Item, LinkStyled } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, state }) => {\n   \n  return (\n    <div>\n         <ul>\n          {movies.map(movie => {\n            return (\n              <Item key={movie.id}>\n                         <LinkStyled to={`/movies/${movie.id}`} state={state}>\n                  {movie.name || movie.title}\n                </LinkStyled>\n              </Item>\n            );\n          })}\n        </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  margin-top: 8px;\n  font-weight: 500;\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  display: inline-block;\n  padding: 5px;\n  text-decoration: none;\n  color: black;\n  border-radius: 12px;\n  :hover {\n    background-color: rgb(243 129 7);\n    font-weight: 700;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: rgb(243 129 7);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { GoSearch } from 'react-icons/go';\nimport { Header, SearchForm, SearchFormBtn, SearchFormInput} from './Searchbar.styled'\n\n\nconst Searchbar = ({onSubmit}) => {\n  const [query, setQuery] = useState('');\n  \nconst handleInput = event => {\n   setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleFormSUbmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Please, enter some text', {\n        position: 'top-center',\n        duration: 3000,\n          });\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n \n    return (\n      <Header className=\"Searchbar\">\n        <SearchForm onSubmit={handleFormSUbmit}>\n          <SearchFormBtn type=\"submit\" className=\"SearchFormButton\">\n            <GoSearch style={{ width: 20, height: 20 }} />\n          </SearchFormBtn>\n          <SearchFormInput\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"query\"\n            value={query}\n            autoFocus\n            onChange={handleInput}\n            placeholder=\"Search movies\"\n          />\n        </SearchForm>\n      </Header>\n    );\n  }\n\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import { fetchSearchMovies} from 'Services/movies-api';\nimport { useEffect, useState} from 'react';\nimport { useSearchParams, useLocation} from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Searchbar from '../components/Searchbar/Searchbar';\n\n\nconst Movies = () => {\n   const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query');\n    const location = useLocation();\n    useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getSearchMovie() {\n      try {\n        const data = await fetchSearchMovies(query);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getSearchMovie();\n    }, [query]);\n    \n    function handleFormSubmit(query) {\n    setSearchParams({ query });\n  }\n    \n    return (\n        <>\n    <Searchbar onSubmit={handleFormSubmit} />\n      {movies && (<MoviesList movies={movies} state={{ from: location }} />\n    )}\n        </>)\n}\nexport default Movies;"],"names":["API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieDetails","id","fetchMovieCredits","cast","fetchMovieReviews","fetchSearchMovies","query","movies","state","map","movie","to","name","title","Title","styled","Item","LinkStyled","NavLink","Header","SearchForm","SearchFormBtn","SearchFormInput","onSubmit","useState","setQuery","className","event","preventDefault","trim","toast","position","duration","type","style","width","height","autoComplete","value","autoFocus","onChange","target","toLowerCase","placeholder","useSearchParams","searchParams","setSearchParams","setMovies","get","location","useLocation","useEffect","console","log","getSearchMovie","MoviesList","from"],"sourceRoot":""}