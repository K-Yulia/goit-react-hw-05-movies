{"version":3,"file":"static/js/387.9cc50d67.chunk.js","mappings":"mTAGMA,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAD1D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAiCP,IADnD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAAyCP,IAD3D,cACCG,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAAyCP,IAD3D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBV,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACoBY,EADpB,YADlB,cACCT,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAzBPH,EAAAA,EAAAA,SAAAA,QAAyB,+B,kLCFZW,EAAWC,EAAAA,GAAAA,GAAH,qJASRC,EAAWD,EAAAA,GAAAA,GAAH,6XAcRE,EAAUF,EAAAA,GAAAA,IAAH,iFAMPG,EAAYH,EAAAA,GAAAA,EAAH,+I,SCoBtB,EA9Ca,WACT,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCAChB,8GAEuBf,EAAAA,EAAAA,IAAkBU,GAFzC,OAEUd,EAFV,OAGIkB,EAAalB,GAHjB,gDAKIoB,QAAQC,IAAR,MALJ,0DADgB,uBAAC,WAAD,wBAShBC,EACD,GAAE,CAACR,KAEE,+BACG,0BACL,SAACL,EAAD,UACwB,IAArBQ,EAAUM,QACT,kEAEAN,EAAUO,KAAI,SAAAC,GAAI,OAChB,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,IACED,EAAKE,aAAL,8CAC2CF,EAAKE,cAC5CC,EAENC,IAAI,iBAEN,SAAChB,EAAD,UAAYY,EAAKK,OACfL,EAAKM,YACb,+BACE,UAAClB,EAAD,yBAAuBY,EAAKM,iBAZXN,EAAKO,QADJ,SAuB3B,C","sources":["Services/movies-api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = '597f9408c4003b5df23df8b028e83258';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}  \n\n\nexport async function fetchMovieCredits(id) {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}  \n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n} \n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n} ","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  gap: 12px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: 14%;\n  color: white;\n  background-color: rgb(243 129 7);\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const CastImg = styled.img`\n  height: 320px;\n  width: 215px;\n  object-fit: cover;\n`;\n\nexport const CastTitle = styled.p`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  :not(:last-child) {\n    padding-bottom: 10px;\n  }\n`;\n","import { useParams} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieCredits } from \"Services/movies-api\";\nimport avatar from '..//..//img/no-foto.jpg';\nimport {CastList, CastItem, CastImg, CastTitle} from './Cast.styled';\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [movieCast, setMovieCast] = useState([]);\n    \n    useEffect(() => {\n    async function getMovieCredits() {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        setMovieCast(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieCredits();\n  }, [movieId])\n    return (\n        <>\n           <div>\n      <CastList>\n        {movieCast.length === 0 ? (\n          <p>We don't have any cast for this movie.</p>\n        ) : (\n          movieCast.map(item => (\n            <CastItem key={item.cast_id}>\n              <CastImg\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original/${item.profile_path}`\n                    : avatar\n                }\n                alt=\"{item.name}\"\n              />\n              <CastTitle>{item.name}</CastTitle>\n               {item.character && (\n        <>\n          <CastTitle>Character: {item.character}</CastTitle>\n        </>\n      )}\n            </CastItem>\n          ))\n        )}\n      </CastList>\n            </div>\n            </>\n    )\n}\nexport default Cast;\n"],"names":["API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieDetails","id","fetchMovieCredits","cast","fetchMovieReviews","fetchSearchMovies","query","CastList","styled","CastItem","CastImg","CastTitle","movieId","useParams","useState","movieCast","setMovieCast","useEffect","console","log","getMovieCredits","length","map","item","src","profile_path","avatar","alt","name","character","cast_id"],"sourceRoot":""}